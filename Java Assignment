Java:

1.	Create an array with the values (1, 2, 3, 4, 5, 6, 7) and shuffle it?

                      import java.util.Random;
                      
                      public class Main 
                      {
                          public static void main(String[] args) 
                         {
                                 // Create the initial array
                                 int[] originalArray = {1, 2, 3, 4, 5, 6, 7};
                      
                                 // Shuffle the array
                                Random random = new Random();
                      
                                for (int i = originalArray.length - 1; i > 0; i--) 
                               {
                                   int index = random.nextInt(i + 1);
                      
                                  // Swap originalArray[i] and originalArray[index]
                                  int temp = originalArray[i];
                                  originalArray[i] = originalArray[index];
                                  originalArray[index] = temp;
                              }
                      
                                 // Print the shuffled array
                                for (int num : originalArray) 
                                {
                                      System.out.print(num + " ");
                                }
                           }
                       }
                      
                      

2.	 Enter a Roman Number as input and convert it to an integer? (Example: IX = 9)


                      import java.util.HashMap;
                      import java.util.Map;
                      import java.util.Scanner;
                      
                      public class Main 
                      {
                          public static void main(String[] args) 
                         {
                              // Create a mapping of Roman numerals to integers
                              Map<Character, Integer> romanNumerals = new HashMap<>();
                              romanNumerals.put('I', 1);
                              romanNumerals.put('V', 5);
                              romanNumerals.put('X', 10);
                              romanNumerals.put('L', 50);
                              romanNumerals.put('C', 100);
                              romanNumerals.put('D', 500);
                              romanNumerals.put('M', 1000);
                      
                              Scanner scanner = new Scanner(System.in);
                              System.out.print("Enter a Roman numeral: ");
                              String romanNumeral = scanner.nextLine().toUpperCase();
                      
                              int result = 0, prev = 0;
                      
                              for (int i = romanNumeral.length() - 1; i >= 0; i--) 
                             {
                                  int value = romanNumerals.get(romanNumeral.charAt(i));
                                  result += (value < prev) ? -value : value;
                                  prev = value;
                              }
                      
                              System.out.println("Integer representation: " + result);
                          }
                      }


3.	Check if the input is pangram or not. (A pangram is a sentence that contains all the alphabets from A to Z) ?

                      import java.util.HashSet;
                      import java.util.Scanner;
                      import java.util.Set;
                      
                      public class Main3 
                      {
                          public static void main(String[] args) 
                         {
                              Scanner scanner = new Scanner(System.in);
                              System.out.print("Enter a sentence: ");
                              String input = scanner.nextLine().toLowerCase();
                      
                              boolean isPangram = checkPangram(input);
                              
                              if (isPangram) 
                             {
                                  System.out.println("The input is a pangram.");
                              } else {
                                  System.out.println("The input is not a pangram.");
                              }
                          }
                      
                          private static boolean checkPangram(String input) 
                          {
                              Set<Character> alphabetSet = new HashSet<>();
                              // Add all alphabets from 'a' to 'z' to the set
                              for (char ch = 'a'; ch <= 'z'; ch++) {
                                  alphabetSet.add(ch);
                           }
                      
                              // Check if all alphabets are present in the input string
                              for (char ch : input.toCharArray()) 
                              {
                                  alphabetSet.remove(ch);
                                  // If all alphabets are found, the set will be empty
                                  if (alphabetSet.isEmpty()) 
                                 {
                                      return true;
                                  }
                              }
                              return false;
                          }
                      }
